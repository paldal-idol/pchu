const getColor = (category) => {
  if (category === "flower") {
    // background, border, plum, glass
    return [
      ["#FFFFFF"],
      ["#574133", "#222222"],
      ["#FB6C66", "#539400", "#00943B"],
      ["#4CDA88", "#A13368", "#FFA800", "#5A70A7"]
    ];
  }
  return ["#FFFFFF"];
};

const getRandomColor = (category) => {
  const colors = getColor(category);

  const colorInfo = colors.reduce((res, color) => {
    const index = Math.floor(Math.random() * color.length);
    res.push(color[index]);
    return res;
  }, []);
  return colorInfo;
};

const object = {
  flower: [
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [1],
    [1],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [2],
    [2],
    [2],
    [2],
    [1],
    [0],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [2],
    [2],
    [2],
    [1],
    [2],
    [2],
    [1],
    [2],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [2],
    [1],
    [2],
    [2],
    [2],
    [2],
    [1],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [2],
    [2],
    [2],
    [2],
    [1],
    [2],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [1],
    [2],
    [2],
    [2],
    [1],
    [2],
    [2],
    [1],
    [1],
    [1],
    [0],
    [0],
    [0],
    [0],
    [1],
    [2],
    [1],
    [2],
    [1],
    [2],
    [2],
    [2],
    [2],
    [1],
    [2],
    [2],
    [1],
    [0],
    [0],
    [0],
    [0],
    [1],
    [1],
    [2],
    [2],
    [2],
    [2],
    [1],
    [2],
    [1],
    [1],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [2],
    [2],
    [2],
    [2],
    [2],
    [2],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [0],
    [1],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [1],
    [0],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [0],
    [0],
    [0],
    [0],
    [1],
    [3],
    [1],
    [3],
    [3],
    [3],
    [3],
    [1],
    [3],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [3],
    [1],
    [3],
    [3],
    [3],
    [3],
    [1],
    [3],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [3],
    [1],
    [3],
    [3],
    [3],
    [3],
    [1],
    [3],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [0],
    [0],
    [0],
    [0]
  ],
  github: [
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [1],
    [1],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [2],
    [2],
    [2],
    [2],
    [1],
    [0],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [2],
    [2],
    [2],
    [1],
    [2],
    [2],
    [1],
    [2],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [2],
    [1],
    [2],
    [2],
    [2],
    [2],
    [1],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [2],
    [2],
    [2],
    [2],
    [1],
    [2],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [1],
    [2],
    [2],
    [2],
    [1],
    [2],
    [2],
    [1],
    [1],
    [1],
    [0],
    [0],
    [0],
    [0],
    [1],
    [2],
    [1],
    [2],
    [1],
    [2],
    [2],
    [2],
    [2],
    [1],
    [2],
    [2],
    [1],
    [0],
    [0],
    [0],
    [0],
    [1],
    [1],
    [2],
    [2],
    [2],
    [2],
    [1],
    [2],
    [1],
    [1],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [2],
    [2],
    [2],
    [2],
    [2],
    [2],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [0],
    [1],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [1],
    [0],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [0],
    [0],
    [0],
    [0],
    [1],
    [3],
    [1],
    [3],
    [3],
    [3],
    [3],
    [1],
    [3],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [3],
    [1],
    [3],
    [3],
    [3],
    [3],
    [1],
    [3],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [3],
    [1],
    [3],
    [3],
    [3],
    [3],
    [1],
    [3],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [0],
    [0],
    [0],
    [0]
  ]
};

export { object, getRandomColor };
